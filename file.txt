pipeline {
    agent any
    
    environment {
        DIRECTORY_PATH = "/path/to/code"
        TESTING_ENVIRONMENT = "testing_environment"
        PRODUCTION_ENVIRONMENT = "YourName"
    }
    
    stages {
        stage('Build') {
            steps {
                echo "Stage 1: Build - Building the code using Maven to compile and package the code."
                echo "Tool: Maven"
                // Example command: sh 'mvn clean package'
            }
        }
        stage('Unit and Integration Tests') {
            steps {
                echo "Stage 2: Unit and Integration Tests - Running unit tests to ensure the code functions as expected and integration tests to ensure the different components work together."
                echo "Tools: JUnit for unit tests, Selenium for integration tests"
                // Example commands: sh 'mvn test', sh 'mvn verify'
            }
            post {
                success {
                    mail to: "zyan0021@gmail.com",
                         subject: "Unit and Integration Tests - Success",
                         body: "Unit and Integration Tests were successful!"
                         
                }
                failure {
                    mail to: "zyan0021@gmail.com",
                         subject: "Unit and Integration Tests - Failure",
                         body: "Unit and Integration Tests failed. Please check the logs."
                         
                }
            }
        }
        stage('Code Analysis') {
            steps {
                echo "Stage 3: Code Analysis - Analyzing the code to ensure it meets industry standards."
                echo "Tool: SonarQube"
                // Example command: sh 'mvn sonar:sonar'
            }
        }
        stage('Security Scan') {
            steps {
                echo "Stage 4: Security Scan - Performing a security scan on the code to identify any vulnerabilities."
                echo "Tool: OWASP Dependency Check"
                // Example command: sh 'dependency-check --project projectName --scan /path/to/code'
            }
            post {
                success {
                    mail to: "zyan0021@gmail.com",
                         subject: "Security Scan - Success",
                         body: "Security Scan was successful!"
                         
                }
                failure {
                    mail to: "zyan0021@gmail.com",
                         subject: "Security Scan - Failure",
                         body: "Security Scan failed. Please check the logs."
                         
                }
            }
        }
        stage('Deploy to Staging') {
            steps {
                echo "Stage 5: Deploy to Staging - Deploying the application to a staging server."
                echo "Tool: AWS CLI"
                // Example command: sh 'aws s3 cp target/my-app.jar s3://my-staging-bucket/'
            }
        }
        stage('Integration Tests on Staging') {
            steps {
                echo "Stage 6: Integration Tests on Staging - Running integration tests on the staging environment to ensure the application functions as expected."
                echo "Tool: Selenium"
                // Example command: sh 'mvn verify -Dtest=StagingIntegrationTest'
            }
        }
        stage('Deploy to Production') {
            steps {
                echo "Stage 7: Deploy to Production - Deploying the application to a production server."
                echo "Tool: AWS CLI"
                // Example command: sh 'aws s3 cp target/my-app.jar s3://my-production-bucket/'
            }
        }
    }
}
