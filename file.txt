pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                echo 'Building...'
                // Example tool: Maven
                sh 'mvn clean package'
            }
        }
        stage('Unit and Integration Tests') {
            steps {
                echo 'Running Unit and Integration Tests...'
                // Example tools: JUnit for unit tests, Selenium for integration tests
                sh 'mvn test'
            }
        }
        stage('Code Analysis') {
            steps {
                echo 'Performing Code Analysis...'
                // Example tool: SonarQube
                sh 'sonar-scanner'
            }
        }
        stage('Security Scan') {
            steps {
                echo 'Performing Security Scan...'
                // Example tool: OWASP ZAP
                sh 'zap-cli start'
            }
        }
        stage('Deploy to Staging') {
            steps {
                echo 'Deploying to Staging...'
                // Example tool: AWS CLI
                sh 'aws deploy create-deployment --application-name MyApp --deployment-group-name MyAppStaging --s3-location bucket=my-bucket,key=my-app.zip,bundleType=zip'
            }
        }
        stage('Integration Tests on Staging') {
            steps {
                echo 'Running Integration Tests on Staging...'
                // Example tool: Selenium
                sh 'selenium-side-runner my-tests.side'
            }
        }
        stage('Deploy to Production') {
            steps {
                echo 'Deploying to Production...'
                // Example tool: AWS CLI
                sh 'aws deploy create-deployment --application-name MyApp --deployment-group-name MyAppProd --s3-location bucket=my-bucket,key=my-app.zip,bundleType=zip'
            }
        }
    }

    post {
        always {
            emailext (
                to: 'zyan0021@gmail.com',
                subject: "Pipeline ${currentBuild.fullDisplayName}",
                body: "Pipeline ${currentBuild.fullDisplayName} finished with status: ${currentBuild.currentResult}",
                attachLog: true
            )
        }
    }
}
